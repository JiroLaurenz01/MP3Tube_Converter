<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>